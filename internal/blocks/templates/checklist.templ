package blocks

import (
	"fmt"
	"github.com/nathanhollows/Rapua/internal/blocks"
	"github.com/nathanhollows/Rapua/internal/models"
)

templ checklistPlayer(settings models.InstanceSettings, block blocks.ChecklistBlock, data models.TeamBlockState) {
	<div
		id={ fmt.Sprintf("block-%s", block.ID) }
		class="indicator w-full"
	>
		if settings.EnablePoints && block.Points > 0 {
			<span class="indicator-item indicator-top indicator-center badge badge-info">{ fmt.Sprint(block.GetPoints()) } pts</span>
		}
		if data.IsComplete {
			<span class="indicator-item indicator-top indicator-right badge badge-success mr-12">Complete</span>
		} else {
			<span class="indicator-item indicator-top indicator-right badge badge-primary mr-12">Incomplete</span>
		}
		<div class="card prose p-5 bg-base-200 shadow-lg w-full">
			@templ.Raw(stringToMarkdown(block.Content))
			<form
				hx-post={ fmt.Sprint("/blocks/validate") }
				hx-target={ fmt.Sprintf("#block-%s", block.ID) }
			>
				<input type="hidden" name="block" value={ block.ID }/>
				<div class="checklist w-full flex flex-col gap-1">
					for _, item := range block.List {
						<div class="form-control">
							<label class="label cursor-pointer flex gap-3 justify-start items-start">
								<input
									id={ fmt.Sprintf("checklist-%s-%s", block.ID, item.ID) }
									name={ fmt.Sprintf("checklist-item-%s", item.ID) }
									type="checkbox"
									class="checkbox checkbox-primary mt-1"
									if data.IsComplete || item.Checked {
										checked
									}
								/>
								<span>{ item.Description }</span>
							</label>
						</div>
					}
				</div>
			</form>
		</div>
	</div>
}

templ checklistAdmin(settings models.InstanceSettings, block blocks.ChecklistBlock) {
	<form
		hx-post={ fmt.Sprint("/admin/locations/", block.LocationID, "/blocks/", block.ID, "/update") }
		class="modal-box md:w-11/12 max-w-5xl"
	>
		<h3 class="text-lg font-bold flex flex-row gap-3">
			@templ.Raw(block.GetIconSVG())
			Updating { block.GetName() } block
		</h3>
		<label
			for={ fmt.Sprintf("md-%s", block.ID) }
			class="form-control w-full my-5"
		>
			<div class="label">
				<span class="label-text font-bold">Instructions</span>
				<label class="label-text-alt flex flex-row gap-3">
					Preview
					<input
						type="checkbox"
						class="toggle toggle-sm md-toggle"
						name="preview"
						class="checkbox"
						data-block={ block.ID }
						onclick="previewMD(event)"
					/>
				</label>
			</div>
			<textarea
				id={ fmt.Sprintf("md-%s", block.ID) }
				name="content"
				rows="4"
				class="textarea textarea-bordered w-full font-mono"
				placeholder="Markdown content here..."
			>{ block.Content }</textarea>
			<div
				id={ fmt.Sprintf("preview-md-%s", block.ID) }
				class="flex items-center justify-center min-h-48 border border-base-300 hidden card w-full bg-base-200 rounded-[var(--rounded-btn)] p-5"
			></div>
			<div class="label">
				<span class="label-text-alt flex flex-row content-center gap-1">
					<span class="self-center">
						This block uses Markdown for formatting content. <a class="link" href="/admin/markdown" target="blank">Here's a quick guide</a>.
					</span>
				</span>
			</div>
		</label>
		<div class="form-control w-full my-5">
			<label class="label font-bold">Checklist Items</label>
			<div class="checklist-admin">
				for _, item := range block.List {
					<label class="input-group my-2">
						<input
							type="text"
							name={ fmt.Sprintf("checklist-item-%s", item.ID) }
							class="input input-bordered w-full"
							value={ item.Description }
							placeholder="Checklist item description..."
						/>
					</label>
				}
				<button class="btn btn-outline btn-sm mt-2" onclick="addChecklistItem(event)">
					Add Item
				</button>
			</div>
		</div>
		<div class="modal-action">
			<button
				type="button"
				class="btn"
				onclick="block_edit_modal.close()"
			>Nevermind</button>
			<button
				type="submit"
				class="btn btn-primary"
				onclick="block_edit_modal.close()"
			>Save</button>
		</div>
	</form>
}
