package templates

import (
	"fmt"
	"github.com/nathanhollows/Rapua/v4/models"
)

templ TeamsTable(teams []models.Team) {
	<ul class="list rounded-lg mx-5">
		<div class="flex flex-row items-center gap-3 border border-base-300 bg-base-200/80 rounded p-3 py-4 join-item">
			<!-- Select all -->
			<input
				id="select-all"
				type="checkbox"
				class="checkbox checkbox-sm checkbox-primary"
				_="on change or load
						set <.team-item:not(.hidden) input[name='team-checkbox']/>'s checked to my checked
						if my checked
							add .bg-base-200 to <.team-item:not(.hidden)/>
							remove .bg-transparent from <.team-item:not(.hidden)/>
						else 
							add .bg-transparent to <.team-item:not(.hidden)/>
							remove .bg-base-200 from <.team-item:not(.hidden)/>
						end
						if my checked or my indeterminate
							add .hidden to #team-filters
							remove .hidden from #team-actions
						else
							add .hidden to #team-actions
							remove .hidden from #team-filters
						end
					end
					on change from <input[name='team-checkbox']/>
						if <input[name='team-checkbox']:checked/>'s length is not <input[name='team-checkbox']/>'s length
							set my indeterminate to true
						end
						if <input[name='team-checkbox']:checked/>'s length is 0
							set my indeterminate to false
							set my checked to false
						end
						if <input[name='team-checkbox']:checked/>'s length is <input[name='team-checkbox']/>'s length
							set my indeterminate to false
							set my checked to true
						end
						if my checked or my indeterminate
							add .hidden to #team-filters
							remove .hidden from #team-actions
						else
							add .hidden to #team-actions
							remove .hidden from #team-filters
						end
					end
					on htmx:afterRequest from #delete-confirm
						wait 0.5s
						if me.checked
							set me.checked to false
							set me.indeterminate to false
							remove .hidden from #team-filters
							add .hidden to #team-actions
						end
					end
					"
			/>
			<div id="team-actions" class="hidden flex flex-row flex-grow gap-3 items-center justify-between">
				<span class="font-bold text-base-content text-sm">
					Selected: 
					<span
						class="font-bold text-base-content/60"
						_="on change from <input[type='checkbox']/> or load
							set my textContent to <input[name='team-checkbox']:checked/>'s length"
					></span>
				</span>
				<div class="flex flex-row gap-2">
					<button
						class="btn btn-sm btn-outline"
						_="on click
						set list to []
						repeat for x in <input[name='team-checkbox']:checked/>
							append x's value to list
						end
						writeText(list.join('\n')) on navigator.clipboard
						set copyText to my innerHTML
						set my textContent to 'Copied!'
						wait 1.5s
						set my innerHTML to copyText
					"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-copy w-4 h-4"><rect width="8" height="4" x="8" y="2" rx="1" ry="1"></rect><path d="M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2"></path><path d="M16 4h2a2 2 0 0 1 2 2v4"></path><path d="M21 14H11"></path><path d="m15 10-4 4 4 4"></path></svg>
						Copy Codes
					</button>
					<button
						id="reset-teams"
						class="btn btn-sm btn-warning"
						_="on click
							confirm_reset_modal.showModal()
						end
					"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-history w-4 h-4"><path d="M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"></path><path d="M3 3v5h5"></path><path d="M12 7v5l4 2"></path></svg>
						Reset
					</button>
					<button
						id="delete-teams"
						class="btn btn-sm btn-error"
						_="on click
							confirm_delete_modal.showModal()
						end
						"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-2 w-4 h-4"><path d="M3 6h18"></path><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path><line x1="10" x2="10" y1="11" y2="17"></line><line x1="14" x2="14" y1="11" y2="17"></line></svg>
						Delete
					</button>
				</div>
			</div>
			<div id="team-filters" class="flex flex-grow flex-row justify-between">
				<!-- Active/Inactive count -->
				<div class="filter">
					<input
						class="btn btn-sm filter-reset"
						type="radio"
						name="activefilter"
						aria-label="All"
						_="
							on click remove .hidden from <.team-item/>
						"
					/>
					<input
						class="btn btn-sm"
						type="radio"
						name="activefilter"
						aria-label="Active Only"
						_="
						on change
							if my checked
								remove .hidden from <.team-item/>
								add .hidden to <.team-item.inactive/>
							end
						"
					/>
					<input
						class="btn btn-sm"
						type="radio"
						name="activefilter"
						aria-label="Inactive Only"
						_="
						on change
							if my checked
								remove .hidden from <.team-item/>
								add .hidden to <.team-item.active/>
							end
						"
					/>
				</div>
				<div class="flex flex-row gap-2">
					<button
						class="btn btn-sm btn-outline"
						_="on click
						set list to []
						repeat for x in <input[name='team-checkbox']/>
							if x's offsetParent is not null
								append x's value to list
							end
						end
						writeText(list.join('\n')) on navigator.clipboard
						set copyText to my innerHTML
						set my textContent to 'Copied!'
						wait 1.5s
						set my innerHTML to copyText
					"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-copy w-4 h-4"><rect width="8" height="4" x="8" y="2" rx="1" ry="1"></rect><path d="M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2"></path><path d="M16 4h2a2 2 0 0 1 2 2v4"></path><path d="M21 14H11"></path><path d="m15 10-4 4 4 4"></path></svg>
						Copy Codes
					</button>
					<!-- Search -->
					<label class="input input-sm flex items-center gap-2 w-60">
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search w-5 h-5"><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"></path></svg>
						<input
							id="search-teams"
							type="text"
							class="grow"
							placeholder="Search"
							_="
							init send input to me
							on input 
								show .team-item
									when its textContent.toLowerCase().normalize('NFD')
									contains my value.toLowerCase().normalize('NFD')
								if my value's length > 0 then
									remove .invisible from #clear-search
								else
									add .invisible to #clear-search
								end
							end
							"
						/>
						<button
							id="clear-search"
							role="button"
							class="btn btn-ghost btn-xs btn-circle invisible -mr-2"
							type="reset"
							_="
								init if #search-teams's value's length > 0 then
									remove .invisible from me
								end
								on click
									set #search-teams's value to ''
									add .invisible to me
									send input to #search-teams
								end
							"
						>
							<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x-icon lucide-x w-4 h-4 opacity-80 hover:opacity-100"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
						</button>
					</label>
				</div>
			</div>
		</div>
		for _, team := range filter(teams, func(team models.Team) bool { return team.HasStarted }) {
			@teamItem(team, "active")
		}
		for _, team := range filter(teams, func(team models.Team) bool { return !team.HasStarted }) {
			@teamItem(team, "inactive")
		}
	</ul>
	<div id="teams-list" class="join join-vertical w-full px-5 rounded-lg">
		<div
			if len(teams) == 0 {
				class="no-teams flex flex-row justify-between items-center gap-3 border border-base-300 hover:bg-base-300 rounded-lg p-3 join-item bg-transparent transition-colors"
			} else {
				class="no-teams flex flex-row justify-between items-center gap-3 border border-base-300 hover:bg-base-300 rounded-lg p-3 join-item bg-transparent transition-colors hidden"
			}
			_="on htmx:afterSettle from body
				if <.team-item/>'s length == 0
					remove .hidden from me
				else
					add .hidden to me
				end
				on htmx:afterRequest from body
					wait 0.5s
					if <.team-item/>'s length == 0
						remove .hidden from me
					else
						add .hidden to me
					end
				"
		>
			<div class="flex flex-row items-center gap-3 grow">
				<p class="flex-grow text-center">
					No teams to show yet. Do you want to <a href="#" class="link" onclick="add_teams_modal.showModal()">add some teams</a>?
				</p>
			</div>
		</div>
	</div>
	<dialog id="confirm_reset_modal" class="modal">
		<div class="modal-box prose outline outline-2 outline-offset-1 outline-warning">
			<h3 class="text-lg font-bold">Reset teams</h3>
			<p class="pt-4">
				You are about to reset 
				<span
					class="font-bold"
					_="on change from <input[type='checkbox']/> or load
							set my textContent to <input[name='team-checkbox']:checked/>'s length"
				></span> team(s). Doing this will wipe all related data including:
			</p>
			<ul>
				<li>the team name</li>
				<li>all related check-ins, points, activity progress, and media</li>
			</ul>
			<p>Credits are not restored if a team is reset.</p>
			<p>Only the team code will be kept. This action cannot be undone.</p>
			<form
				hx-post="/admin/teams/reset"
				hx-include=".team-item"
				hx-target="#teams-list"
				hx-swap="outerHTML"
			>
				<input type="hidden" name="id" value=""/>
				<div class="modal-action">
					<button type="button" class="btn" onclick="confirm_reset_modal.close()">Nevermind</button>
					<button type="submit" class="btn btn-warning" onclick="confirm_reset_modal.close()">Reset</button>
				</div>
			</form>
		</div>
	</dialog>
	<dialog id="confirm_delete_modal" class="modal">
		<div class="modal-box prose outline outline-2 outline-offset-1 outline-error">
			<h3 class="text-lg font-bold">Delete teams</h3>
			<p class="pt-4">
				You are about to delete
				<span
					class="font-bold"
					_="on change from <input[type='checkbox']/> or load
							set my textContent to <input[name='team-checkbox']:checked/>'s length"
				></span> team(s). Doing this will wipe all data including:
			</p>
			<ul>
				<li>the team</li>
				<li>check-ins</li>
				<li>activity progress</li>
				<li>any uploaded media</li>
			</ul>
			<p>Credits are not restored if a team is deleted.</p>
			<p>This action cannot be undone.</p>
			<form
				hx-delete="/admin/teams/delete"
				hx-include=".team-item"
				hx-target="#teams-list"
				hx-swap="outerHTML"
			>
				<input type="hidden" name="id" value=""/>
				<div class="modal-action">
					<button type="button" class="btn" onclick="confirm_delete_modal.close()">Nevermind</button>
					<button id="delete-confirm" type="submit" class="btn btn-error" onclick="confirm_delete_modal.close()">Delete</button>
				</div>
			</form>
		</div>
	</dialog>
}

templ TeamsList(teams []models.Team) {
	for _, team := range teams {
		@teamItem(team, "inactive")
	}
}

templ teamItem(team models.Team, classes string) {
	<li class={ fmt.Sprint("team-item list-row hover:bg-base-200 transition-colors justify-between flex ", classes) }>
		<div class="flex flex-row items-center gap-3 grow">
			<input
				name="team-checkbox"
				type="checkbox"
				class="team-checkbox checkbox checkbox-sm checkbox-primary"
				value={ team.Code }
				_="on htmx:afterRequest from #delete-confirm
					if me.checked
						add .bg-danger .text-danger-content to closest .team-item
						transition opacity to 0 then
						remove the closest .team-item
					end
					on input or change
						if me.checked
							remove .bg-transparent from closest .team-item
							add .bg-base-200 to closest .team-item
						else
							add .bg-transparent to closest .team-item
							remove .bg-base-200 from closest .team-item
						end
				"
			/>
			<!-- Location code -->
			<div
				class="tooltip cursor-pointer"
				data-tip="Click to copy"
				_="on click 
					writeText(my textContent) on navigator.clipboard
					set @data-tip to 'Copied!'
					wait 2s
					set @data-tip to 'Click to copy'
					"
			>
				if team.HasStarted {
					<span class="team-code badge badge-success badge-outline font-mono tracking-wider">{ team.Code }</span>
				} else {
					<span class="team-code badge font-mono tracking-wider">{ team.Code }</span>
				}
			</div>
			<!-- Location name -->
			if team.Name == "" {
				<em class="flex-grow opacity-50">
					No name set
				</em>
			} else {
				<a
					class="flex-grow"
				>
					{ team.Name }
				</a>
			}
			if team.HasStarted {
				<button
					class="btn btn-xs"
					hx-get={ fmt.Sprintf("/admin/activity/team/%s", team.Code) }
					hx-target="#team_modal .modal-box"
					hx-trigger="click"
					hx-swap="innerHTML"
				>
					See activity
				</button>
			}
		</div>
	</li>
}

templ Teams(teams []models.Team, credits int) {
	<span class="hidden bg-danger text-danger-content border-error border-warning"></span>
	<div class="flex gap-3 flex-row justify-between items-center w-full p-5">
		<h1 class="text-2xl font-bold">
			Teams
			<div class="dropdown dropdown-hover">
				<div tabindex="0" role="button" class="btn btn-circle btn-ghost btn-xs text-info"><svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" fill="none" stroke="currentcolor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 lucide lucide-info"><circle cx="12" cy="12" r="10"></circle><path d="m12 16v-4"></path><path d="m12 8h.01"></path></svg></div>
				<div tabindex="0" class="card compact dropdown-content font-normal bg-base-200 rounded-box z-[1] w-72 shadow">
					<div tabindex="0" class="card-body">
						<h2 class="card-title">Teams</h2>
						<p>
							Teams can play individually or as a group sharing a single device with a unique team code.
						</p>
						<p>
							Progress is tracked collectively for each team, whether played by an individual or a group.
						</p>
						<p>
							Team codes are randomly generated. Players can set their own team names when they start playing.
						</p>
					</div>
				</div>
			</div>
		</h1>
		<a
			href="/admin/settings/credits"
			if credits <= 0 {
				class="badge badge-soft badge-error tooltip tooltip-bottom"
				data-tip="No credits remaining! New teams won't be able to start playing."
			}
			else
			if credits >= 5 {
				class="badge badge-soft badge-info tooltip tooltip-bottom"
				data-tip="Each team start costs one credit. Credits do not affect how many team codes you can generate."
			} else {
				class="badge badge-soft badge-warning tooltip tooltip-bottom"
				data-tip="Low on credits! Each team start costs one credit. Credits do not affect how many team codes you can generate."
			}
		>
			{ fmt.Sprint(credits) } credits remaining
		</a>
		<div class="flex gap-3">
			<button
				class="btn btn-secondary"
				onclick="add_teams_modal.showModal()"
			>
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user-plus"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><line x1="19" x2="19" y1="8" y2="14"></line><line x1="22" x2="16" y1="11" y2="11"></line></svg>
				Add teams
			</button>
		</div>
	</div>
	<div id="teams-table">
		@TeamsTable(teams)
	</div>
	<!-- Modal for adding teams -->
	<dialog
		id="add_teams_modal"
		class="modal modal-bottom sm:modal-middle"
	>
		<div class="modal-box">
			<h3 class="font-bold text-lg">Quick add teams</h3>
			<p class="py-4">How many teams would you like to add?</p>
			<form
				hx-post="/admin/teams/add"
				hx-target="#teams-list"
				hx-swap="beforeend swap:0.5s"
				class="join flex flex-row w-full"
			>
				<input
					name="count"
					type="number"
					id="count"
					class="input join-item flex-grow"
					placeholder="1+"
					min="1"
					step="1"
					value="10"
				/>
				<button class="btn btn-primary join-item" onclick="add_teams_modal.close()">Add Teams</button>
			</form>
			<div class="modal-action">
				<form method="dialog">
					<button class="btn">Nevermind</button>
				</form>
			</div>
			<form method="dialog">
				<button
					class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
				>✕</button>
			</form>
		</div>
	</dialog>
	@teamModal()
}
