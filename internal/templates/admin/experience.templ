package templates

import (
	"fmt"
	"github.com/nathanhollows/Rapua/v5/models"
)

templ Experience(settings models.InstanceSettings, locationCount int) {
	<main class="max-w-7xl m-auto pb-8">
		<form
			hx-post="/admin/experience"
			hx-trigger="submit"
			hx-swap="none"
		>
			<!-- Header -->
			<div class="flex flex-row justify-between items-center w-full p-5">
				<div>
					<h1 class="text-2xl font-bold">Craft the experience</h1>
				</div>
				<button
					class="btn btn-primary"
					disabled
					_="on change from <form input/>
						remove @disabled
					"
				>Save</button>
			</div>
			<div class="flex flex-col lg:flex-row w-full gap-8 p-5 pt-0">
				<!-- Settings Panel -->
				<div class="flex-1 space-y-8" id="movement-settings">
					@RoutingCard(settings)
					@PlayerViewCard(settings)
					@CompetitionCard(settings)
				</div>
				<!-- Preview Panel -->
				<div class="lg:w-[400px] flex-shrink-0">
					<div class="sticky top-5">
						@MobilePreview(locationCount)
					</div>
				</div>
			</div>
		</form>
		@PreviewScript()
	</main>
}

// PreviewScript includes the preview JavaScript
templ PreviewScript() {
	<script src="/static/js/experience_preview.js"></script>
}

// RoutingCard - Routing settings in a card matching settings.templ style
templ RoutingCard(settings models.InstanceSettings) {
	<div class="card bg-gradient-to-br from-base-200/70 to-base-200/50 hover:border-base-content/40 transition-colors flex w-full border border-base-content/20 rounded-xl px-10 py-10">
		<div class="grid h-fit flex-grow space-y-6">
			<!-- Section Header -->
			<div>
				<h2 class="font-bold text-lg flex items-center gap-2">
					Routing
				</h2>
				<p class="text-sm text-base-content/60 mt-1 text-wrap">Control the path teams take through your experience</p>
			</div>
			<!-- Route Strategy -->
			<div>
				<label class="font-semibold text-base flex items-center gap-2">
					Route Strategy
				</label>
				<div class="mt-3">
					for i, v := range models.GetRouteStrategies() {
						<label class="label cursor-pointer justify-start gap-3 p-3 rounded-lg hover:bg-base-300 transition-colors w-full">
							<input
								type="radio"
								name="routeStrategy"
								value={ v.String() }
								data-index={ intToString(i) }
								class="radio checked:radio-primary"
								if settings.RouteStrategy == v {
									checked
								}
								onchange="updatePreview()"
								_={ routeStrategyScript(i) }
							/>
							<div class="flex-1">
								<div class="text-base-content">{ v.String() }</div>
								<div class="text-sm text-base-content/60 text-wrap">{ v.Description() }</div>
							</div>
						</label>
					}
				</div>
			</div>
			<!-- Location Limit -->
			<div>
				<label class="font-semibold text-base flex items-center gap-2" for="maxLocations">
					Location Limit
				</label>
				<p class="text-sm text-base-content/60 mt-1">The maximum number of locations shown to show a team.</p>
				<div class="flex items-center gap-4 mt-3">
					<input
						type="number"
						name="maxLocations"
						id="maxLocations"
						min="0"
						step="1"
						placeholder="3"
						value={ intToString(settings.MaxNextLocations) }
						class="input input-bordered w-32"
						onkeyup="updatePreview()"
					/>
					<span class="text-sm text-base-content/60">Set to 0 to show all</span>
				</div>
				<div
					id="maxLocationsDisabledMessage"
					class={ fmt.Sprint("alert alert-warning alert-soft mt-3 text-sm invisible") }
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
					</svg>
					<span>Only available for { models.RouteStrategyRandom.String() }</span>
				</div>
			</div>
		</div>
	</div>
}

// PlayerViewCard - Player view settings
templ PlayerViewCard(settings models.InstanceSettings) {
	<div class="card bg-gradient-to-br from-base-200/70 to-base-200/50 hover:border-base-content/40 transition-colors flex w-full border border-base-content/20 rounded-xl px-10 py-10">
		<div class="grid h-fit flex-grow space-y-6">
			<!-- Section Header -->
			<div>
				<h2 class="font-bold text-lg flex items-center gap-2">
					Player View
				</h2>
				<p class="text-sm text-base-content/60 mt-1">
					How players know where to go.
				</p>
			</div>
			<!-- Navigation Display -->
			<div>
				<label class="font-semibold text-base flex items-center gap-2">
					Navigation Display
				</label>
				<div class="grid md:grid-cols-2 mt-3">
					for i, v := range models.GetNavigationDisplayModes() {
						<label class="label cursor-pointer justify-start gap-3 p-3 rounded-lg hover:bg-base-300 transition-colors">
							<input
								type="radio"
								name="navigationDisplayMode"
								value={ v.String() }
								data-index={ intToString(i) }
								class="radio checked:radio-primary"
								if settings.NavigationDisplayMode == v {
									checked
								}
								onchange="updatePreview()"
								_={ navigationDisplayScript(i) }
							/>
							<div class="flex-1">
								<div class="font-medium text-base-content">{ v.String() }</div>
								<div class="text-sm text-base-content/60 text-wrap">{ v.Description() }</div>
							</div>
						</label>
					}
				</div>
			</div>
			<!-- Display Team Count -->
			<div>
				<div class="form-control">
					<label class="label cursor-pointer justify-start gap-3">
						<input
							type="checkbox"
							id="showTeamCount"
							name="showTeamCount"
							class="toggle checked:toggle-primary"
							if settings.ShowTeamCount {
								checked
							}
							onchange="updatePreview()"
						/>
						<div class="flex-1">
							<span class="font-medium text-base-content flex items-center gap-2">
								Display team count
							</span>
							<p class="text-sm text-base-content/60 mt-1 text-wrap">Show how many teams are at each location.</p>
						</div>
					</label>
					<div
						id="teamCountDisabledMessage"
						class="alert alert-warning alert-soft mt-2 text-sm invisible"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
						</svg>
						<span>Disabled when { models.NavigationDisplayCustom.String() } is selected</span>
					</div>
				</div>
			</div>
			<!-- Check Out Toggle -->
			<div>
				<div class="form-control">
					<label class="label cursor-pointer justify-start gap-3">
						<input
							type="checkbox"
							id="mustCheckOut"
							name="mustCheckOut"
							class="toggle checked:toggle-primary"
							if settings.MustCheckOut {
								checked
							}
						/>
						<div class="flex-1">
							<span class="font-medium text-base-content flex items-center gap-2 text-wrap">
								Check out of every location?
							</span>
							<p class="text-sm text-base-content/60 mt-1 text-wrap">Useful for tracking time spent at each location</p>
						</div>
					</label>
				</div>
			</div>
		</div>
	</div>
}

// CompetitionCard - Competition and points settings
templ CompetitionCard(settings models.InstanceSettings) {
	<div class="card bg-gradient-to-br from-base-200/70 to-base-200/50 hover:border-base-content/40 transition-colors flex w-full border border-base-content/20 rounded-xl px-10 py-10">
		<div class="grid h-fit flex-grow space-y-6">
			<!-- Section Header -->
			<div>
				<h2 class="font-bold text-lg flex items-center gap-2">
					Competition
				</h2>
				<p class="text-sm text-base-content/60 mt-1 text-wrap">Configure points and competitive features</p>
			</div>
			<!-- Enable Points -->
			<div>
				<div class="form-control">
					<label class="label cursor-pointer justify-start gap-3">
						<input
							type="checkbox"
							id="enablePoints"
							name="enablePoints"
							class="toggle toggle-lg"
							if settings.EnablePoints {
								checked
							}
							onchange="updatePreview()"
							_={ enablePointsScript() }
						/>
						<div class="flex-1">
							<span class="font-semibold text-base-content flex items-center gap-2">
								Enable Points
							</span>
							<p class="text-sm text-base-content/60 mt-1 text-wrap">Teams earn points for checking into locations and completing activities</p>
						</div>
					</label>
				</div>
			</div>
			<!-- Bonus Points -->
			<div class="form-control">
				<label class="label cursor-pointer justify-start gap-3">
					<input
						type="checkbox"
						id="enableBonusPoints"
						name="enableBonusPoints"
						class="toggle"
						if settings.EnableBonusPoints {
							checked
						}
						onchange="updatePreview()"
					/>
					<div class="flex-1">
						<span class="font-medium text-base-content flex items-center gap-2 text-wrap">
							Bonus points for early check-ins
						</span>
						<p class="text-sm text-base-content/60 mt-1 text-wrap">Encourage teams to disperse and race for the first, second, and third check-in</p>
					</div>
				</label>
				<div
					id="bonusPointsDisabledMessage"
					class="alert alert-warning alert-soft alert-outline mt-2 text-sm invisible"
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
					</svg>
					<span>Enable points before using bonus points</span>
				</div>
			</div>
		</div>
	</div>
}

// MobilePreview - Phone mockup for preview
templ MobilePreview(locationCount int) {
	<div class="h-min-content">
		<div class="mockup-phone bg-black h-min sticky top-8 shadow-2xl">
			<div class="mockup-phone-display overflow-y-scroll overflow-x-hidden bg-base-200">
				<!-- Demo -->
				<div
					if locationCount > 2 {
						hx-post="/admin/experience/preview"
						hx-trigger="load, change delay:500ms from:(#movement-settings input), keyup delay:500ms from:(#movement-settings input), change delay:500ms from:(#movement-settings input)"
						hx-swap="innerHTML"
						hx-include="#movement-settings"
					}
					class="sm:mx-auto sm:w-full sm:max-w-sm block overflow-y-scroll p-5 py-12"
				>
					@previewContent()
				</div>
				<!-- /Demo -->
			</div>
		</div>
	</div>
}

// PreviewContent - Default preview content
templ previewContent() {
	<div class="p-6">
		<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mx-auto text-base-content/40">
			<path d="m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z"></path>
			<circle cx="12" cy="12" r="10"></circle>
		</svg>
		<h2 class="mt-4 text-center text-xl font-bold">Next location</h2>
		<p class="text-center text-sm text-base-content/70 mt-2">
			You may choose any of the following locations. Use the map below to help find where you want to go.
		</p>
		<div id="locationList" class="mt-4"></div>
		<div id="navigationView" class="mt-4"></div>
	</div>
}

// HyperScript helper functions
func routeStrategyScript(index int) string {
	return `
	on click
		if @data-index is not '2'
			remove .invisible from #maxLocationsDisabledMessage
			add @disabled to #maxLocations
		else
			add .invisible to #maxLocationsDisabledMessage
			remove @disabled from #maxLocations
		end
		on load if my.checked and @data-index is not '2'
			remove .invisible from #maxLocationsDisabledMessage
			add @disabled to #maxLocations
		end
	`
}

func navigationDisplayScript(index int) string {
	return `on click
		if @data-index is '3'
			remove .invisible from #teamCountDisabledMessage
			add @disabled to #showTeamCount
		else
			add .invisible to #teamCountDisabledMessage
			remove @disabled from #showTeamCount
		end
		on load if my.checked and @data-index is '3'
			remove .invisible from #teamCountDisabledMessage
			add @disabled to #showTeamCount
		end
	`
}

func enablePointsScript() string {
	return `on click or load
		if me.checked
			remove @disabled from #enableBonusPoints
			add .invisible to #bonusPointsDisabledMessage
		else
			add @disabled to #enableBonusPoints
			remove .invisible from #bonusPointsDisabledMessage
		end`
}
