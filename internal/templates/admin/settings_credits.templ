package templates	

import (
	"fmt"
	"github.com/nathanhollows/Rapua/v4/internal/services"
	"github.com/nathanhollows/Rapua/v4/models"
	"math"
	"time"
)

templ SettingsCreditUsage(freeCredits, paidCredits, recurring int, topups []models.CreditAdjustments, usage []services.TeamStartSummary) {
	<div class="flex gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<div class="stats">
				<div class="stat">
					<div class="stat-figure text-secondary">
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-badge-check-icon lucide-badge-check w-6 h-6"><path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"></path><path d="m9 12 2 2 4-4"></path></svg>
					</div>
					<div class="stat-title">Free Credits</div>
					<div class="stat-value">
						{ fmt.Sprint(freeCredits) }
					</div>
					<div class="stat-desc">Refreshed monthly</div>
				</div>
				<div class="stat">
					<div class="stat-figure text-secondary">
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-badge-dollar-sign-icon lucide-badge-dollar-sign w-6 h-6"><path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"></path><path d="M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"></path><path d="M12 18V6"></path></svg>
					</div>
					<div class="stat-title">Paid Credits</div>
					<div class="stat-value">
						{ fmt.Sprint(paidCredits) }
					</div>
					<div class="stat-actions">
						<button class="btn btn-xs btn-success btn-soft">Top up</button>
					</div>
				</div>
				<div class="stat">
					<div class="stat-figure text-secondary">
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-refresh-cw-icon lucide-refresh-cw w-6 h-6"><path d="M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"></path><path d="M21 3v5h-5"></path><path d="M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"></path><path d="M8 16H3v5"></path></svg>
					</div>
					<div class="stat-title">Free monthly credits</div>
					<div class="stat-value">
						{ fmt.Sprint(recurring) }
					</div>
					<div class="stat-desc">
						Tops up in { fmt.Sprint(math.Round(time.Date(time.Now().Year(), time.Now().Month()+1, 1, 0, 0, 0, 0, time.Local).Sub(time.Now()).Hours() / 24)) } days
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<div class="my-5">
				<h2 class="font-bold pb-5 flex justify-between">
					Credit Usage
					<form
						class="join"
						hx-get="/admin/settings/credits/chart"
						hx-target="#my-chart"
						hx-swap="innerHTML"
						hx-trigger="change"
					>
						<input class="join-item btn btn-sm btn-neutral checked:btn-info" type="radio" name="period" value="week" checked aria-label="Week"/>
						<input class="join-item btn btn-sm btn-neutral checked:btn-info" type="radio" name="period" value="month" aria-label="Month"/>
						<input class="join-item btn btn-sm btn-neutral checked:btn-info" type="radio" name="period" value="year" aria-label="Year"/>
					</form>
				</h2>
				<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/charts.css/dist/charts.min.css"/>
				<div id="my-chart">
					@CreditUsageChart(usage, "week")
				</div>
			</div>
		</div>
	</div>
	<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<div class="my-5">
				<h2 class="font-bold pb-5">Credit Top-ups</h2>
				<table class="table">
					<!-- head -->
					<thead>
						<tr>
							<th align="right">Qty</th>
							<th>Reason</th>
							<th>Date</th>
						</tr>
					</thead>
					<tbody>
						<!-- row 1 -->
						for _, row := range topups {
							<tr>
								<th align="right">{ fmt.Sprint(row.Credits) }</th>
								<td>
									{ row.Reason }
								</td>
								<td>
									{ row.CreatedAt.Format("2006-01-02") }
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
}

templ CreditUsageWeek(usage []services.TeamStartSummary, period string) {
	<table class="charts-css column show-labels data-spacing-5 data-center">
		<caption>Team Starts by Day</caption>
		<thead>
			<tr>
				<th scope="col">Date </th>
				<th scope="col">Count </th>
			</tr>
		</thead>
		<tbody class="!aspect-[3/1]">
			for _, row := range usage {
				<tr>
					<th scope="row">
						switch period {
							case "week":
								<span class="inline sm:hidden font-normal">
									{ row.Date.Format("Mon") }
								</span>
								<span class="hidden sm:inline font-normal">
									{ row.Date.Format("Mon 2") }
								</span>
							case "month":
								<span class="font-normal text-sm">
									{ row.Date.Format("02/01") }
								</span>
							case "year":
								<span class="inline sm:hidden font-normal">
									{ row.Date.Format("Mon") }
								</span>
								<span class="hidden sm:inline font-normal">
									{ row.Date.Format("Mon 2") }
								</span>
							default:
								<span class="inline sm:hidden font-normal">
									{ row.Date.Format("Mon") }
								</span>
								<span class="hidden sm:inline font-normal">
									{ row.Date.Format("Mon 2") }
								</span>
						}
					</th>
					<td
						data-ratio={ fmt.Sprint("--size: ", row.Ratio, ";") }
						style="--size: 0"
						_="init set my style to @data-ratio"
						class="rounded-md shadow !bg-info max-w-10 !mx-auto transition-all hover:outline-1 outline-offset-2 outline-info"
					>
						if row.Ratio > 0 {
							<span class="data text-info-content">
								{ fmt.Sprint(row.Count) }
							</span>
						}
						<span class="tooltip">
							{ fmt.Sprint(row.Count) } credits used 
							<br/>
							{ row.Date.Format("2006-01-02") }
						</span>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

templ CreditUsageChart(usage []services.TeamStartSummary, period string) {
	<table class="charts-css column show-labels data-spacing-5 data-center">
		<caption>Team Starts by Day</caption>
		<thead>
			<tr>
				<th scope="col">Date </th>
				<th scope="col">Count </th>
			</tr>
		</thead>
		<tbody class="!aspect-[3/1]">
			for i, row := range usage {
				<tr>
					<th scope="row">
						switch period {
							case "week":
								<span class="inline sm:hidden font-normal">
									{ row.Date.Format("Mon") }
								</span>
								<span class="hidden sm:inline font-normal">
									{ row.Date.Format("Mon 2") }
								</span>
							case "month":
								if i % 3 == 0 {
									<span class="font-normal overflow-visible block w-max">
										{ row.Date.Format("02 Jan") }
									</span>
								}
							case "year":
								<span class="font-normal">
									{ row.Date.Format("Jan") }
								</span>
							default:
								<span class="inline sm:hidden font-normal">
									{ row.Date.Format("Mon") }
								</span>
								<span class="hidden sm:inline font-normal">
									{ row.Date.Format("Mon 2") }
								</span>
						}
					</th>
					<td
						data-ratio={ fmt.Sprint("--size: ", row.Ratio, ";") }
						style="--size: 0"
						_="init set my style to @data-ratio"
						class="rounded-md shadow !bg-info max-w-10 !mx-auto transition-all hover:outline-1 outline-offset-2 outline-info"
					>
						if row.Ratio > 0 {
							<span class="data text-info-content">
								{ fmt.Sprint(row.Count) }
							</span>
						}
						<span class="tooltip">
							{ fmt.Sprint(row.Count) } credits used 
							<br/>
							{ row.Date.Format("2006-01-02") }
						</span>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

templ CreditUsageYear(usage []services.TeamStartSummary) {
	<table class="charts-css column show-labels data-spacing-5 data-center">
		<caption>Team Starts by Day</caption>
		<thead>
			<tr>
				<th scope="col">Month </th>
				<th scope="col">Count </th>
			</tr>
		</thead>
		<tbody class="!aspect-[3/1]">
			for _, row := range usage {
				<tr>
					<th scope="row">
						{ row.Date.Format("Jan") }
					</th>
					<td
						data-ratio={ fmt.Sprint("--size: ", row.Ratio, ";") }
						style="--size: 0"
						_="init set my style to @data-ratio"
						class="rounded-md shadow !bg-info max-w-10 !mx-auto transition-all hover:outline-1 outline-offset-2 outline-info"
					>
						if row.Ratio > 0 {
							<span class="data text-info-content">
								{ fmt.Sprint(row.Count) }
							</span>
						}
						<span class="tooltip">
							{ fmt.Sprint(row.Count) } credits used 
							<br/>
							{ row.Date.Format("2006-01-02") }
						</span>
					</td>
				</tr>
			}
		</tbody>
	</table>
}
