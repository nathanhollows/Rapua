package templates

import (
	"github.com/nathanhollows/Rapua/v4/models"
	"strings"
)

templ Settings(user models.User) {
	<main class="max-w-7xl m-auto pb-8">
		<div class="flex flex-col md:flex-row w-full gap-8 p-5">
			<ul
				class="menu rounded-box w-80 h-min gap-1"
				hx-target="#settings"
				hx-swap="innerHTML"
			>
				<li>
					<h2 class="menu-title">
						Settings
					</h2>
				</li>
				<li>
					<a
						hx-get="/admin/settings/profile"
						hx-target="#settings"
						class="active"
						_="on click
		remove .active from <li a />
		add .active to me
		"
					>
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-user-round-icon lucide-circle-user-round"><path d="M18 20a6 6 0 0 0-12 0"></path><circle cx="12" cy="10" r="4"></circle><circle cx="12" cy="12" r="10"></circle></svg>
						Profile
					</a>
				</li>
				<li>
					<a
						hx-get="/admin/settings/appearance"
						_="on click
		remove .active from <li a />
		add .active to me
		"
					>
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-palette-icon lucide-palette"><path d="M12 22a1 1 0 0 1 0-20 10 9 0 0 1 10 9 5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z"></path><circle cx="13.5" cy="6.5" r=".5" fill="currentColor"></circle><circle cx="17.5" cy="10.5" r=".5" fill="currentColor"></circle><circle cx="6.5" cy="12.5" r=".5" fill="currentColor"></circle><circle cx="8.5" cy="7.5" r=".5" fill="currentColor"></circle></svg>
						Appearance
					</a>
				</li>
				<li>
					<a
						hx-get="/admin/settings/security"
						_="on click
		remove .active from <li a />
		add .active to me
		"
					>
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user-lock-icon lucide-user-lock"><circle cx="10" cy="7" r="4"></circle><path d="M10.3 15H7a4 4 0 0 0-4 4v2"></path><path d="M15 15.5V14a2 2 0 0 1 4 0v1.5"></path><rect width="8" height="5" x="13" y="16" rx=".899"></rect></svg>
						Security
					</a>
				</li>
				<!--
				<li>
					<a
						hx-get="/admin/settings/billing"
						_="on click
		remove .active from <li a />
		add .active to me
		"
					>
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-dollar-sign-icon lucide-dollar-sign"><line x1="12" x2="12" y1="2" y2="22"></line><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path></svg>
						Billing
					</a>
				</li>
-->
			</ul>
			<section id="settings" class="w-full order-3">
				@SettingsProfile(user)
			</section>
		</div>
	</main>
}

templ SettingsProfile(user models.User) {
	<form
		hx-post="/admin/settings/profile"
		hx-trigger="keyup delay:500ms, change delay:500ms"
		hx-swap="none"
	>
		<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
			<div class="grid h-fit px-5 flex-grow">
				<h2 class="font-bold py-5">Update your profile</h2>
				<!-- Account settings -->
				<div class="flex gap-5">
					<!-- Name -->
					<label class="form-control w-7/12">
						<div class="label">
							<span class="label-text">Full name</span>
						</div>
						<input
							name="name"
							type="text"
							placeholder="Janette Dough"
							value={ user.Name }
							class="input bg-base-200 w-full"
						/>
					</label>
					<!-- Display Name -->
					<label class="form-control flex-grow">
						<div class="label">
							<span class="label-text">Display name</span>
						</div>
						<input
							name="display_name"
							type="text"
							if user.DisplayName.Valid {
								value={ user.DisplayName.String }
							}
							if user.Name == "" {
								placeholder="Jane"
							}
							class="input bg-base-200 w-full"
						/>
					</label>
				</div>
				<!-- Work Type -->
				<div class="my-5">
					<label class="form-control w-full">
						<div class="label">
							<span class="label-text">What best describes your work?</span>
						</div>
						<select
							name="work_type"
							class="select w-full bg-base-200"
							_="on change
		if my value is 'other' then
				remove .hidden from #other-type
		else
				add .hidden to #other-type
				"
						>
							<option
								value="formal_education"
								if user.WorkType.String == "formal_education" {
									selected
								}
							>Formal education</option>
							<option
								value="informal_education"
								if user.WorkType.String == "informal_education" {
									selected
								}
							>Informal education</option>
							<option
								value="event_organiser"
								if user.WorkType.String == "event_organiser" {
									selected
								}
							>Event organiser</option>
							<option
								value="experience_designer"
								if user.WorkType.String == "experience_designer" {
									selected
								}
							>Experience designer</option>
							<option
								value="corporate_training"
								if user.WorkType.String == "corporate_training" {
									selected
								}
							>Corporate training</option>
							<option
								value="other"
								if user.WorkType.Valid && user.WorkType.String != "formal_education" && user.WorkType.String != "informal_education" && user.WorkType.String != "event_organiser" && user.WorkType.String != "experience_designer" && user.WorkType.String != "corporate_training" {
									selected
								}
							>Other</option>
						</select>
					</label>
				</div>
				<!-- Other Work Type -->
				<div
					id="other-type"
					if user.WorkType.Valid && user.WorkType.String != "formal_education" && user.WorkType.String != "informal_education" && user.WorkType.String != "event_organiser" && user.WorkType.String != "experience_designer" && user.WorkType.String != "corporate_training" {
						class=""
					} else {
						class="hidden"
					}
				>
					<label class="form-control w-full">
						<div class="label">
							<span class="label-text">Please specify your work type</span>
						</div>
						<input
							name="other_work_type"
							type="text"
							placeholder="Your work type"
							if user.WorkType.Valid && user.WorkType.String != "formal_education" && user.WorkType.String != "informal_education" && user.WorkType.String != "event_organiser" && user.WorkType.String != "experience_designer" && user.WorkType.String != "corporate_training" {
								value={ user.WorkType.String }
							}
							class="input bg-base-200 w-full"
						/>
						<div class="label">
							<span class="label-text-alt">This helps me understand who I'm building Rapua for.</span>
						</div>
					</label>
				</div>
				<!-- Preferences -->
				<div class="my-5">
					<label class="form-control w-full">
						<div class="form-control">
							<label class="label cursor-pointer">
								<span class="label-text">Show your email on templates to other logged-in admins?</span>
								<input
									name="show_email"
									type="checkbox"
									class="toggle toggle-primary"
									if user.ShareEmail {
										checked
									}
								/>
							</label>
						</div>
					</label>
				</div>
			</div>
		</div>
	</form>
}

func themes() []string {
	return []string{"Cupcake", "Dracula", "System"}
}

templ SettingsAppearance(user models.User) {
	<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<div class="my-5">
				<h2 class="font-bold pb-5">Change your theme</h2>
				<p class="text-sm mb-4">Theme preferences are stored in your browser and not tied to your account.</p>
				<div id="theme-buttons" class="space-y-2">
					for _, theme := range themes() {
						<button
							type="button"
							class="theme-button outline-base-content text-start outline-offset-4 w-full"
							data-theme-value={ strings.ToLower(theme) }
							_="on click 
							remove .active from .theme-button
							remove .visible from .theme-check
							add .invisible to .theme-check
							add .visible to .theme-check in me
							add .active to me
							set localStorage.theme to @data-theme-value
							call updateThemeUI()
						"
						>
							<span class="bg-base-100 rounded-btn text-base-content block w-full cursor-pointer font-sans" data-theme={ strings.ToLower(theme) }>
								<span class="grid grid-cols-5 grid-rows-3">
									<span class="col-span-5 row-span-3 row-start-1 flex items-center gap-2 px-4 py-3">
										<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor" class="theme-check h-3 w-3 shrink-0"><path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"></path></svg>
										<span class="flex-grow text-sm">
											if theme == "System" {
												Follow system theme
											} else {
												{ theme }
											}
										</span>
										<span class="flex h-full shrink-0 flex-wrap gap-1">
											<span class="bg-primary rounded-badge w-2"></span>
											<span class="bg-secondary rounded-badge w-2"></span>
											<span class="bg-accent rounded-badge w-2"></span>
											<span class="bg-neutral rounded-badge w-2"></span>
										</span>
									</span>
								</span>
							</span>
						</button>
					}
				</div>
				<!-- Theme initialization script -->
				<script>
					// Initialize theme UI
					function updateThemeUI() {
						// Get current theme from localStorage
						const currentTheme = localStorage.getItem('theme') || 'system';
						
						// Update document attribute
						document.documentElement.setAttribute('data-theme', currentTheme);
						
						// Hide all checkmarks first
						document.querySelectorAll('.theme-check').forEach(el => {
							el.classList.add('invisible');
						});
						
						// Show checkmark for current theme
						const activeButton = document.querySelector(`[data-theme-value="${currentTheme}"]`);
						if (activeButton) {
							activeButton.classList.add('active');
							activeButton.querySelector('.theme-check').classList.remove('invisible');
							activeButton.querySelector('.theme-check').classList.add('visible');
						}
					}
					
					// Run on page load
					document.addEventListener('DOMContentLoaded', updateThemeUI);
					
					// Also run now in case the script loads after DOMContentLoaded
					updateThemeUI();
				</script>
			</div>
		</div>
	</div>
}

templ SettingsSecurity(user models.User) {
	if user.Provider == models.ProviderEmail {
		<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-10 py-10 mt-12">
			<p class="text-sm">Logged in with <strong>{ user.Email }</strong></p>
		</div>
		<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
			<div class="grid h-fit px-5 flex-grow">
				<h2 class="font-bold py-5">Change your password</h2>
				<form
					id="password-form"
					hx-post="/admin/settings/security"
					hx-swap="none"
				>
					<!-- Old password -->
					<label class="form-control w-7/12">
						<div class="label">
							<span class="label-text">Current password</span>
						</div>
						<input
							name="old_password"
							type="password"
							class="input bg-base-200 w-full"
							required
						/>
					</label>
					<!-- New password -->
					<label class="form-control w-7/12">
						<div class="label">
							<span class="label-text">New password</span>
						</div>
						<input
							name="new_password"
							type="password"
							class="input bg-base-200 w-full"
							required
							minlength="8"
							id="new_password"
							_="on input if my value != '' then remove .input-error from #confirm_password else add .input-error to #confirm_password end"
						/>
						<div class="label">
							<span class="label-text-alt">
								Use at least 8 characters. Longer passwords are stronger.
							</span>
						</div>
					</label>
					<label class="form-control w-7/12">
						<div class="label">
							<span class="label-text">Confirm password</span>
						</div>
						<input
							name="confirm_password"
							type="password"
							class="input bg-base-200 w-full"
							required
							id="confirm_password"
							_="on input 
								if my value is not document.getElementById('new_password').value then
									add .input-error to me
									remove .hidden from #password-mismatch
								else
									remove .input-error from me
									add .hidden to #password-mismatch
								end"
						/>
						<div class="label">
							<span id="password-mismatch" class="label-text-alt text-error hidden">
								Passwords don't match
							</span>
						</div>
					</label>
					<div class="mt-4">
						<button
							type="submit"
							class="btn btn-primary"
							_="on click
								if #new_password.value != #confirm_password.value then
									halt the event
									add .input-error to #confirm_password
									remove .hidden from #password-mismatch
								end"
						>Change Password</button>
					</div>
				</form>
			</div>
		</div>
	} else {
		<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
			<div class="alert bg-transparent border-0">
				<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" class="w-8 h-8 fill-base-content" viewBox="0 0 32 32">
					<path d="M 16.003906 14.0625 L 16.003906 18.265625 L 21.992188 18.265625 C 21.210938 20.8125 19.082031 22.636719 16.003906 22.636719 C 12.339844 22.636719 9.367188 19.664063 9.367188 16 C 9.367188 12.335938 12.335938 9.363281 16.003906 9.363281 C 17.652344 9.363281 19.15625 9.96875 20.316406 10.964844 L 23.410156 7.867188 C 21.457031 6.085938 18.855469 5 16.003906 5 C 9.925781 5 5 9.925781 5 16 C 5 22.074219 9.925781 27 16.003906 27 C 25.238281 27 27.277344 18.363281 26.371094 14.078125 Z"></path>
				</svg>
				<div>
					<h3 class="font-bold">You're using Google to sign in</h3>
					<p class="text-sm">Your account is managed through Google authentication. Password settings are not available.</p>
					<p class="text-sm">Logged in with <strong>{ user.Email }</strong></p>
				</div>
			</div>
		</div>
	}
	<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<!-- Delete Account Section -->
			<div class="my-5">
				<h2 class="font-bold pb-5">Delete your account</h2>
				<div class="prose">
					<p>Deleting your account will remove all data associated with your account including existing games, game data, templates, snapshots, and uploaded files.</p>
					<p>This is an irreversible process.</p>
					<button
						type="button"
						class="btn btn-error"
						_="on click
							confirm_delete_modal.showModal()
						end
						"
					>Delete my account</button>
				</div>
			</div>
		</div>
	</div>
	<dialog id="confirm_delete_modal" class="modal">
		<div class="modal-box prose outline outline-2 outline-offset-1 outline-error">
			<h3 class="text-lg font-bold">Delete your account</h3>
			<p class="pt-4">
				You are about to delete your account. Doing this will wipe all data including:
			</p>
			<ul>
				<li>games</li>
				<li>historical play data</li>
				<li>any uploaded media</li>
				<li>templates</li>
			</ul>
			<p>This action cannot be undone. If you choose to register again, you will start with a clean slate.</p>
			<p>Please enter your email address to confirm:</p>
			<form
				hx-delete="/admin/settings/delete-account"
				hx-swap="none"
			>
				<input type="email" name="confirm-email" class="input w-full"/>
				<div class="modal-action">
					<button type="button" class="btn" onclick="confirm_delete_modal.close()">Nevermind</button>
					<button type="submit" class="btn btn-error" onclick="confirm_delete_modal.close()">Delete</button>
				</div>
			</form>
		</div>
	</dialog>
}

templ SettingsBilling(user models.User) {
	<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<div class="my-5">
				<h2 class="font-bold pb-5">Your plan</h2>
				<div class="prose">
					<p>You are currently on the <strong>Free Plan</strong>.</p>
					<p>Upgrade to Pro for additional features like team management, advanced analytics, and priority support.</p>
					<button
						type="button"
						class="btn btn-primary"
						_="on click
							fetch '/admin/settings/billing/upgrade' {method: 'POST'}
								then if(it.ok) call window.location.href = '/admin/settings/billing/checkout'
						"
					>Upgrade to Pro</button>
				</div>
			</div>
		</div>
	</div>
	<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<div class="my-5">
				<h2 class="font-bold pb-5">Order history</h2>
				<table class="table w-full">
					<thead>
						<tr>
							<th>Date</th>
							<th>Amount</th>
							<th>Plan</th>
							<th>Receipt</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td colspan="4" class="text-center py-4">No orders yet</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
	</div>
	<div class="flex w-full gap-5 lg:flex-row flex-col border border-base-content/20 bg-base-200/50 rounded-md px-5 py-5 mt-12">
		<div class="grid h-fit px-5 flex-grow">
			<div class="my-5">
				<h2 class="font-bold pb-5">Payment method</h2>
				<div class="prose">
					<p>All payments are handled securely via Stripe. Rapua does not store any payment information.</p>
				</div>
			</div>
		</div>
	</div>
}
