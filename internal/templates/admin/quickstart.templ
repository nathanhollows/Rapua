package templates

import (
	"fmt"
	"github.com/nathanhollows/Rapua/v3/models"
)

templ QuickstartBar(instance models.Instance) {
	if instance.ID == "" || !instance.IsQuickStartDismissed {
		<div
			id="quickstart"
			role="alert"
			class="hidden bg-gradient-to-r from-info/10 via-info/5 to-info/10 shadow-md p-4 bg-base-200 md:flex w-full justify-between rounded-lg rounded-t-none items-center"
			hx-get="/admin/quickstart"
			hx-swap="outerHTML"
			hx-trigger="htmx:afterSwap from:body"
		>
			<div class="flex flex-shrink-0 gap-3 align-middle items-center">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-book-check stroke-info w-6 h-6"><path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"></path><path d="m9 9.5 2 2 4-4"></path></svg>
				<div class="flex flex-row sm:flex-col items-baseline">
					<h3 class="font-bold">Quickstart</h3>
					<p class="text-xs text-base-content/80">Or check the <a href="/docs/user/quickstart" class="link">guide</a></p>
				</div>
			</div>
			<ol
				class="flex items-center md:gap-12 flex-shrink-0 text-center"
				hx-boost="true"
				hx-target="body"
			>
				if instance.ID != "" {
					@completedStep("Create an Instance")
				} else {
					@nextStep(1, "Create an instance", "/admin/instances", false)
				}
				if len(instance.Locations) > 0 {
					@completedStep("Add a Location")
				} else {
					@nextStep(2, "Add a Location", "/admin/locations/new", instance.ID == "")
				}
				if len(instance.Teams) > 0 {
					@completedStep("Add a Team")
				} else {
					@nextStep(3, "Add a Team", "/admin/teams", instance.ID == "")
				}
				if !instance.Settings.CreatedAt.Equal(instance.Settings.UpdatedAt) {
					@completedStep("Update Settings")
				} else {
					@nextStep(4, "Update Settings", "/admin/experience", instance.ID == "")
				}
			</ol>
			<button
				data-tip="Dismiss"
				hx-post="/admin/quickstart/dismiss?redirect=true"
				hx-swap="outerHTML"
				hx-target="#quickstart"
				if instance.ID == "" && len(instance.Locations) > 0 && len(instance.Teams) > 0 && !instance.Settings.CreatedAt.Equal(instance.Settings.UpdatedAt) {
					class="btn btn-sm btn-success tooltip tooltip-left text-center flex"
				} else {
					class="btn btn-sm btn-circle btn-ghost tooltip tooltip-left text-center opacity-50 hover:opacity-100 transition-opacity"
				}
			>
				if instance.ID == "" && len(instance.Locations) > 0 && len(instance.Teams) > 0 && !instance.Settings.CreatedAt.Equal(instance.Settings.UpdatedAt) {
					Ready to play!
				} else {
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x w-4 h-4 m-auto"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
				}
			</button>
		</div>
	}
}

templ completedStep(step string) {
	<li class="flex md:w-full items-center text-success justify-center after:content-['/'] sm:after:hidden after:mx-2 after:text-gray-200">
		<span class="me-2 rounded-full p-1 aspect-square w-4 bg-success text-base-100">
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check w-2 h-2"><path d="M20 6 9 17l-5-5"></path></svg>
		</span>
		<span class="text-nowrap">
			{ step }
		</span>
	</li>
}

templ nextStep(num int, step string, url string, disabled bool) {
	if disabled {
		<li class="flex md:w-full items-center text-base-content/70 justify-center after:content-['/'] sm:after:hidden after:mx-2 after:text-gray-200">
			<span class="me-2">{ fmt.Sprint(num) }</span>
			<span class="text-nowrap">
				{ step }
			</span>
		</li>
	} else {
		<li class="flex md:w-full items-center justify-center after:content-['/'] sm:after:hidden after:mx-2 after:text-gray-200">
			<span class="me-2">{ fmt.Sprint(num) }</span>
			<a href={ templ.SafeURL(url) } class="link text-nowrap">
				{ step }
			</a>
		</li>
	}
}
