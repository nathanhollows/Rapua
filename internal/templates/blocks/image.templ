package blocks

import (
	"fmt"
	"github.com/nathanhollows/Rapua/blocks"
	"github.com/nathanhollows/Rapua/models"
)

templ imagePlayer(_ models.InstanceSettings, block blocks.ImageBlock) {
	<figure id={ fmt.Sprintf("player-block-%s", block.ID) }>
		if block.Link != "" {
			<a
				href={ templ.SafeURL(block.Link) }
				target="_blank"
				rel="noopener"
			>
				<img
					src={ block.URL }
					alt={ block.Caption }
					title={ block.Caption }
					class="rounded-2xl"
				/>
			</a>
		} else {
			<img
				src={ block.URL }
				alt={ block.Caption }
				class="rounded-2xl"
			/>
		}
		if block.Caption != "" {
			<figcaption class="text-sm text-center">{ block.Caption }</figcaption>
		}
	</figure>
}

templ imageAdmin(_ models.InstanceSettings, block blocks.ImageBlock) {
	<form
		id={ fmt.Sprintf("form-%s-upload", block.ID) }
		if block.URL != "" {
			class="w-full hidden"
		} else {
			class="w-full"
		}
		hx-post="/admin/media/upload"
		hx-encoding="multipart/form-data"
		hx-trigger={ fmt.Sprintf("change from:(#file-%s) delay:500ms", block.ID) }
		_={ fmt.Sprintf(`on htmx:xhr:progress(loaded, total)
				set #progress-%s's value to ((loaded / total) * 100)
				if loaded == total
					then add .hidden to <#progress-%s />
				end
			end`,
			block.ID, block.ID,
			) }
		hx-swap="none"
		_={ fmt.Sprint(`on htmx:xhr:progress(loaded, total) 
				set the closest <progress />'s value to ((loaded / total * 100) as Float)
			end
			`, block.ID, block.ID) }
	>
		<input type="hidden" name="location_id" value={ fmt.Sprint(block.LocationID) }/>
		<input type="hidden" name="block_id" value={ fmt.Sprint(block.ID) }/>
		<input type="hidden" name="context" value="image_block"/>
		<label
			for={ fmt.Sprintf("file-%s", block.ID) }
			class="form-control w-full"
		>
			<div class="label">
				<span class="label-text font-bold">Upload Image</span>
			</div>
			<input
				id={ fmt.Sprintf("file-%s", block.ID) }
				name="file"
				type="file"
				accept="image/*"
				class="file-input file-input-bordered w-full"
				_="on change
					remove .hidden from the next <progress />"
			/>
		</label>
		<progress
			id={ fmt.Sprintf("progress-%s", block.ID) }
			class="progress progress-primary w-full hidden"
			value="0"
			max="100"
		></progress>
	</form>
	<form
		if block.URL == "" {
			class="w-full hidden"
		} else {
			class="w-full"
		}
		id={ fmt.Sprintf("form-%s", block.ID) }
		hx-post={ fmt.Sprint("/admin/locations/", block.LocationID, "/blocks/", block.ID, "/update") }
		hx-trigger={ fmt.Sprintf("submit, htmx:afterSettle from:(#form-%s-upload), keyup change from:(#form-%s input) delay:500ms", block.ID, block.ID) }
		hx-swap="none"
		_={ fmt.Sprintf(`on htmx:afterSettle from #form-%s-upload
				remove .hidden from me
				add .hidden to #form-%s-upload
			end`,
			block.ID, block.ID,
			) }
	>
		<label id={ fmt.Sprintf("url-%s-label", block.ID) } class="input input-bordered input-disabled border-opacity-100 flex items-center gap-2">
			<input
				id={ fmt.Sprintf("url-%s", block.ID) }
				name="url"
				type="url"
				class="grow"
				placeholder="Image URL"
				value={ block.URL }
			/>
			<button class="btn btn-sm btn-secondary btn-ghost btn-circle">×</button>
		</label>
		<div class="flex flex-col md:flex-row gap-5">
			<label
				for={ fmt.Sprintf("caption-%s", block.ID) }
				class="form-control w-full mt-5"
			>
				<div class="label">
					<span class="w-full label-text font-bold flex justify-between">
						Caption 
						<badge class="badge badge-info badge-sm opacity-80">Optional</badge>
					</span>
				</div>
				<input
					id={ fmt.Sprintf("caption-%s", block.ID) }
					name="caption"
					type="text"
					class="input input-bordered w-full"
					placeholder="Caption below image"
					value={ block.Caption }
				/>
			</label>
			<label
				for={ fmt.Sprintf("link-%s", block.ID) }
				class="form-control w-full mt-5"
			>
				<div class="label">
					<span class="w-full label-text font-bold flex justify-between">
						Link
						<badge class="badge badge-info badge-sm opacity-80">Optional</badge>
					</span>
				</div>
				<input
					id={ fmt.Sprintf("link-%s", block.ID) }
					name="link"
					type="url"
					class="input input-bordered w-full invalid:border-error"
					placeholder="Link when clicked"
					value={ block.Link }
				/>
			</label>
		</div>
	</form>
}

templ ImageAdminUpload(media models.Upload) {
	<label
		id={ fmt.Sprintf("url-%s-label", media.BlockID) }
		class="input input-bordered input-disabled border-opacity-100 flex items-center gap-2"
		hx-swap-oob="true"
	>
		<input
			id={ fmt.Sprintf("url-%s", media.BlockID) }
			name="url"
			type="url"
			class="grow"
			placeholder="Image URL"
			value={ media.OriginalURL }
		/>
		<button class="btn btn-sm btn-secondary btn-ghost btn-circle">×</button>
	</label>
}
