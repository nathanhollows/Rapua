package templates

import (
	"fmt"
	"github.com/nathanhollows/Rapua/v5/models"
)

templ MyCheckins(team models.Team) {
	<div class="sm:mx-auto sm:w-full sm:max-w-sm">
		<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin-check-inside w-16 h-16 m-auto"><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"></path><path d="m9 10 2 2 4-4"></path></svg>
		<h2 class="mt-5 text-center text-2xl font-bold leading-9 tracking-tight">
			My Check Ins
		</h2>
	</div>
	<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
		if len(team.CheckIns) == 0 {
			<div role="alert" class="alert">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-alert w-5 h-5 text-info"><circle cx="12" cy="12" r="10"></circle><line x1="12" x2="12" y1="8" y2="12"></line><line x1="12" x2="12.01" y1="16" y2="16"></line></svg>
				<span>
					Nothing to show yet. <a href="/next" hx-boost="true" class="link">Check in at your first location to get started.</a>
				</span>
			</div>
		}
		<div class="w-full indicator">
			if len(team.CheckIns) > 0 && team.CheckIns[0].MustCheckOut && team.CheckIns[0].BlocksCompleted {
				<span class="indicator-item indicator-top indicator-center badge badge-primary">Currently checked in</span>
			}
			<div class="w-full join join-vertical">
				for _, scan := range team.CheckIns {
					<a
						href={ templ.SafeURL(fmt.Sprint("/checkins/", scan.Location.MarkerID)) }
						hx-boost="true"
						if team.MustCheckOut == scan.Location.ID {
							class="flex flex-row justify-between items-center gap-2 bg-base-200 hover:bg-base-300 p-4 w-full rounded-lg join-item border border-primary mb-1"
						} else {
							class="flex flex-row justify-start items-center gap-2 bg-base-200 hover:bg-base-300 p-4 w-full rounded-lg join-item border border-base-300"
						}
					>
						if team.Instance.Settings.MustCheckOut {
							if team.MustCheckOut == scan.Location.ID {
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-dashed inline-block mr-2 min-w-5 h-5"><path d="M10.1 2.182a10 10 0 0 1 3.8 0"></path><path d="M13.9 21.818a10 10 0 0 1-3.8 0"></path><path d="M17.609 3.721a10 10 0 0 1 2.69 2.7"></path><path d="M2.182 13.9a10 10 0 0 1 0-3.8"></path><path d="M20.279 17.609a10 10 0 0 1-2.7 2.69"></path><path d="M21.818 10.1a10 10 0 0 1 0 3.8"></path><path d="M3.721 6.391a10 10 0 0 1 2.7-2.69"></path><path d="M6.391 20.279a10 10 0 0 1-2.69-2.7"></path></svg>
							} else {
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-check-big inline-block mr-2 min-w-5 h-5"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>
							}
						}
						<span class="break-after-auto wrap-break-word grow">
							{ scan.Location.Name }
						</span>
						if team.Instance.Settings.EnablePoints {
							<div class="badge badge-soft badge-sm min-w-max">{ fmt.Sprint(scan.Points) } pts</div>
						}
					</a>
				}
			</div>
		</div>
		<div class="flex flex-row justify-center mt-12">
			<a href="/next" class="btn btn-ghost btn-outline" hx-boost="true">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-compass"><path d="m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z"></path><circle cx="12" cy="12" r="10"></circle></svg>
				Next Location
			</a>
		</div>
		@footer(team)
	</div>
}
