package templates

import (
	"fmt"
	"github.com/nathanhollows/Rapua/v4/blocks"
	templates "github.com/nathanhollows/Rapua/v4/internal/templates/blocks"
	"github.com/nathanhollows/Rapua/v4/models"
)

type CheckInViewData struct {
	Settings models.InstanceSettings
	Scan     models.CheckIn
	Blocks   blocks.Blocks
	States   map[string]blocks.PlayerState
}

templ CheckInView(data CheckInViewData) {
	<div class="sm:mx-auto sm:w-full sm:max-w-sm">
		if data.Settings.MustCheckOut && data.Scan.MustCheckOut {
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin-icon lucide-map-pin w-16 h-16 m-auto"><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"></path><circle cx="12" cy="10" r="3"></circle></svg>
		} else {
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin-check-inside w-16 h-16 m-auto"><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"></path><path d="m9 10 2 2 4-4"></path></svg>
		}
		<h2 class="mt-5 text-center text-2xl font-bold leading-9 tracking-tight">
			{ data.Scan.Location.Name }
		</h2>
	</div>
	<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm flex flex-col gap-8">
		for _, block := range data.Blocks {
			<div class="block-view">
				@templates.RenderPlayerView(data.Settings, block, data.States[block.GetID()])
			</div>
		}
		if data.Settings.MustCheckOut {
			if data.Scan.MustCheckOut {
				<div class="text-center">
					<a
						hx-post={ fmt.Sprint("/o/", data.Scan.Location.MarkerID) }
						hx-swap="none"
						hx-vals={ fmt.Sprintf(`{"team": "%s"}`, data.Scan.TeamID) }
						class="btn btn-accent btn-wide"
					>Check Out</a>
				</div>
			}
		}
		<div id="player-nav" class="flex flex-row justify-center join mt-5">
			<a href="/checkins" hx-boost="true" class="btn btn-ghost btn-outline join-item">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin"><path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"></path> <circle cx="12" cy="10" r="3"></circle></svg>
				My Check-ins
			</a>
			if !(data.Settings.MustCheckOut && data.Scan.MustCheckOut) {
				<a href="/next" hx-boost="true" class="btn btn-ghost btn-outline join-item">
					<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-compass"><path d="m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z"></path><circle cx="12" cy="12" r="10"></circle></svg>
					Next Location
				</a>
			}
		</div>
	</div>
	<style>
		iframe {
			border-radius: var(--rounded-box, 1rem);
		}
	</style>
}
