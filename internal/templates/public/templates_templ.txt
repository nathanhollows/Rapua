<div class=\"hero bg-base-200 min-h-96\"><div class=\"w-full items-start max-w-7xl hero-content flex-col p-8\"><div class=\"badge badge-secondary -mb-3\">Template</div><h1 class=\"text-5xl font-black\">
</h1><p class=\"py-6\"><em>No description provided.</em></p></div></div><div class=\"max-w-7xl m-auto px-8 pt-8 w-full flex flex-col-reverse md:flex-row gap-8\"><main class=\"w-full\"><section class=\"w-full max-w-full prose grow flex flex-col h-full\"><h2>Preview</h2><div class=\"mockup-browser border-base-300 border w-full flex-grow flex flex-col\"><div class=\"mockup-browser-toolbar\"><div class=\"flex gap-2 mx-auto\"><button class=\"btn btn-sm btn-circle btn-ghost btn-disabled\" _=\"on change from &lt;select /&gt;\n\t\t\t\t\t\t\t\tif its value is not &#39;lobby&#39; then remove .btn-disabled from me\n\t\t\t\t\t\t\t\telse add .btn-disabled to me end\n\t\t\t\t\t\t\t\ton click \n\t\t\t\t\t\t\t\t\t  set sel to #pages \n\t\t\t\t\t\t\t\t\t  set i to sel.selectedIndex - 1\n\t\t\t\t\t\t\t\t\t  repeat while i &gt; 0 and sel.options[i].disabled \n\t\t\t\t\t\t\t\t\t\tdecrement i\n\t\t\t\t\t\t\t\t\t  end\n\t\t\t\t\t\t\t\t\t  if i &gt;= 0 then set sel.selectedIndex to i end\n\t\t\t\t\t\t\t\t\t  trigger change on sel\n\t\t\t\t\t\t\t\t  \"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-chevron-left\"><path d=\"m15 18-6-6 6-6\"></path></svg></button> <select id=\"pages\" class=\"select select-sm select-bordered w-56 md:w-96 mx-auto text-ellipsis\" _=\"on change\n\t\t\t\t\t\t\t\t\tset #preview&#39;s innerText to my.options[my.selectedIndex].text\n\t\t\t\t\t\t\t\t\ton load trigger change on me\n\t\t\t\t\t\t\t\t\t\" hx-get=\"/lobby\" hx-trigger=\"change\" hx-swap=\"innerHTML\" hx-target=\"#preview\"><option disabled class=\"font-bold\">Pages</option> <option selected value=\"lobby\">Lobby</option> <option value=\"next\">Navigation</option> <option disabled>Locations</option> 
<option value=\"
\" class=\"location-option\"
 data-lat=\"
\" data-lng=\"
\"
>
</option>
</select> <button class=\"btn btn-sm btn-circle btn-ghost\" _=\"\n\t\t\t\t\t\t\t\ton change from &lt;select /&gt;\n\t\t\t\t\t\t\t\t\tset sel to #pages \n\t\t\t\t\t\t\t\t\tif sel.selectedIndex == sel.length - 1 then add .btn-disabled to me\n\t\t\t\t\t\t\t\t\telse remove .btn-disabled from me\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\ton click \n\t\t\t\t\t\t\t\t\t  set sel to #pages \n\t\t\t\t\t\t\t\t\t  set i to sel.selectedIndex + 1\n\t\t\t\t\t\t\t\t\t  repeat while i &lt; sel.length and sel.options[i].disabled \n\t\t\t\t\t\t\t\t\t\tincrement i\n\t\t\t\t\t\t\t\t\t  end\n\t\t\t\t\t\t\t\t\t  if i &lt; sel.length then set sel.selectedIndex to i\n\t\t\t\t\t\t\t\t\t  trigger change on sel\n\t\t\t\t\t\t\t\t  \"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-chevron-right\"><path d=\"m9 18 6-6-6-6\"></path></svg></button></div></div><div class=\" border-t border-base-300 h-3/4 md:h-full\"><div id=\"preview\" class=\"overflow-scroll\"><span class=\"loading loading-spinner loading-lg\"></span></div></div></div></section></main><aside class=\"flex flex-col gap-5 md:w-96\"><a class=\"btn btn-accent btn-lg group tooltip inline-flex items-center\" onclick=\"launchTemplate()\" data-id=\"
\" data-name=\"
\" data-tip=\"Create a new game using this template.\">Launch <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-rocket w-4 h-4 group-hover:translate-x-1 group-hover:-translate-y-1 transition-transform\"><path d=\"M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z\"></path><path d=\"m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z\"></path><path d=\"M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0\"></path><path d=\"M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5\"></path></svg></a><div class=\"card bg-base-200 card-md shadow-sm\"><div class=\"card-body\"><h2 class=\"card-title\">Template Details</h2><div class=\"prose\"><ul><li>Created 
</li><li>
<span class=\"tooltip cursor-help underline decoration-dashed\" data-tip=\"This link is temporary and will expire.\">Expires 
</span>
<span class=\"tooltip cursor-help underline decoration-dashed\" data-tip=\"This link will never expire.\">Never expires</span>
</li><li>
<span class=\"tooltip cursor-help underline decoration-dashed\" data-tip=\"This template may be launched an unlimited number of times.\">Unlimited launches</span>
<span class=\"tooltip cursor-help underline decoration-dashed\" data-tip=\"
\">
</span>
</li><li><span class=\"tooltip cursor-help underline decoration-dashed\" data-tip=\"Only those with the link can access this template.\">Private link</span></li></ul></div></div></div><div class=\"card bg-base-200 card-md shadow-sm\"><div class=\"card-body\"><h2 class=\"card-title\">Game Settings</h2><div class=\"prose\"><ul><li><strong>
</strong> locations</li><li><span class=\"tooltip cursor-help underline decoration-dashed\" data-tip=\"
\">
</span></li><li><span class=\"tooltip cursor-help underline decoration-dashed\" data-tip=\"
\">Showing 
</span></li>
<li>Points are <strong>enabled</strong></li>
<li>Bonus points are <strong>enabled</strong></li>
<li>Bonus points are <strong>disabled</strong></li>
<li>Points are <strong>disabled</strong></li>
</ul></div></div></div></aside></div><div class=\"max-w-7xl m-auto px-8 w-full\"><div id=\"map-container\" class=\"relative w-full rounded-lg shadow-lg my-5 h-96\"><div id=\"map-activity\" class=\"map w-full h-full rounded-lg\"></div></div></div><script>\n(function () {\n  let map; // Store the map instance globally within the IIFE\n  let markerArray = []; // Store the markers array globally within the IIFE\n  const bounds = new mapboxgl.LngLatBounds();\n\n  function initializeMap() {\n    const locations = document.querySelectorAll('.location-option');\n    // Calculate the center and zoom level based on the locations\n    let coords = [170.5111643, -45.8650509];\n    let zoom = 17;\n    for (let i = 0; i < locations.length; i++) {\n      const lat = parseFloat(locations[i].dataset.lat);\n      const lng = parseFloat(locations[i].dataset.lng);\n      if (lat !== 0 && lng !== 0) {\n        coords = [lng, lat];\n        break;\n      }\n    }\n\n    // Clear any existing markers\n    markerArray.forEach(marker => marker.remove());\n    markerArray = [];\n\n    // Destroy existing map instance if it exists\n    if (map) {\n      map.remove();\n      map = null; // Explicitly set to null to clear reference\n    }\n\n    // Set the Mapbox access token\n    mapboxgl.accessToken = document.getElementById('mapbox_key').dataset.key;\n\n    // Determine the style based on color scheme\n    const style = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'mapbox://styles/nathanhollows/cl9w3nxff002m14sy9fco4vnr'\n      : 'mapbox://styles/nathanhollows/clszboe2y005i01oid8ca37jm';\n\n    // Create the map\n    map = new mapboxgl.Map({\n      container: 'map-activity',\n      style: style,\n      center: coords,\n      zoom: zoom,\n      cooperativeGestures: true,\n    });\n\n    map.on('load', function () {\n      map.resize();\n    });\n\n    // Find and loop through .location-name elements to create markers with original numbers\n    locations.forEach(function (location, index) {\n\t  if (!location.dataset.lat || !location.dataset.lng) {\n\t\treturn;\n\t  }\n\n      // Create the marker\n      const marker = new mapboxgl.Marker()\n        .setLngLat([location.dataset.lng, location.dataset.lat])\n        .setPopup(new mapboxgl.Popup({ offset: 25 }) // Add popups\n\t\t.setHTML(location.textContent));\n\n\t\tmarker.getElement().addEventListener('mouseenter', function () {\n\t\t  popup = marker.getPopup();\n\t\t\tif (!popup.isOpen()) {\n\t\t\t\tmarker.togglePopup();\n\t\t\t}\n\t\t});\n\n\t\tmarker.getElement().addEventListener('mouseleave', function () {\n\t\t\tmarker.togglePopup();\t\n\t\t});\n\n      markerArray.push(marker);\n\n\n    });\n\n    // Sort markers by latitude\n    markerArray.sort(function (a, b) {\n      return parseFloat(b.getLngLat().lat) - parseFloat(a.getLngLat().lat);\n    });\n\n    // Add markers to the map in the sorted order without changing their displayed numbers\n    markerArray.forEach(marker => {\n      marker.addTo(map);\n    });\n\n    // Fit the map to the bounds of the markers\n    if (markerArray.length > 1) {\n      markerArray.forEach(marker => {\n        bounds.extend(marker.getLngLat());\n      });\n\n      map.fitBounds(bounds, { padding: 50 });\n    }\n  }\n\n  // Function to zoom map when select#pages changes\n  function handlePageChange() {\n    const select = document.getElementById('pages');\n    const selectedOption = select.options[select.selectedIndex];\n\n    if (selectedOption.dataset.lat && selectedOption.dataset.lng) {\n      const lat = parseFloat(selectedOption.dataset.lat);\n      const lng = parseFloat(selectedOption.dataset.lng);\n\n      if (!isNaN(lat) && !isNaN(lng)) {\n        map.flyTo({ center: [lng, lat], zoom: 17 });\n      }\n    } else {\n\t  map.fitBounds(bounds, { padding: 50 });\n\t}\n  }\n  // Attach change event to select#pages\n  document.getElementById('pages').addEventListener('change', handlePageChange);\n\n  // Initialize the map on page load\n  initializeMap();\n\n})();\n</script>
